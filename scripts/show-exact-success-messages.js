#!/usr/bin/env node

/**
 * Script para mostrar las instrucciones EXACTAS que retorna cada funci√≥n en caso de √©xito
 */

console.log('üìã INSTRUCCIONES EXACTAS QUE RETORNA CADA FUNCI√ìN AL SER EXITOSA');
console.log('=' .repeat(70));

const SUCCESS_MESSAGES = {
    'check_availability': {
        caso: 'Cuando HAY disponibilidad',
        retorna: `EXITO_DISPONIBILIDAD: Se encontraron [N] opciones disponibles.

[Lista de apartamentos con precios]

INSTRUCCION: Presenta las opciones al hu√©sped de forma clara y amable. 
Si muestra inter√©s en alguna, procede a recopilar sus datos para crear la reserva.
Si los precios no est√°n disponibles, menciona que puedes consultarlos.`
    },
    
    'check_booking_details': {
        caso: 'Cuando encuentra la reserva',
        retorna: `EXITO_CONSULTA: Reserva(s) encontrada(s) correctamente.

INSTRUCCION: Presenta los detalles de la reserva al hu√©sped de forma clara. 
Si necesita hacer cambios, ofrece ayuda. Si todo est√° bien, confirma que est√° todo listo para su llegada.`
    },
    
    'create_new_booking': {
        caso: 'Cuando crea la reserva exitosamente',
        retorna: `EXITO_RESERVA: La reserva [ID] se cre√≥ correctamente en Beds24.

SIGUIENTE_PASO: Procede a ejecutar generate_booking_confirmation_pdf con el bookingId [ID] para enviar los detalles al hu√©sped.

Luego sigue las instrucciones que recibir√°s de esa funci√≥n.`
    },
    
    'edit_booking': {
        caso: 'Cuando registra el pago',
        retorna: `EXITO_PAGO_REGISTRADO: Comprobante registrado correctamente en la reserva [ID].

DATOS_CONFIRMADOS:
‚Ä¢ C√≥digo reserva: [ID]
‚Ä¢ Status: [status]
‚Ä¢ Monto registrado: $[monto] COP
‚Ä¢ Comprobante: [descripci√≥n]
‚Ä¢ N√∫mero de pago: #[n√∫mero]
‚Ä¢ Fecha: [fecha]

SIGUIENTE_PASO: [generate_payment_receipt_pdf o generate_booking_confirmation_pdf seg√∫n el caso]

INSTRUCCION: Confirma al hu√©sped que su pago fue registrado exitosamente. 
Menciona que recibir√° un documento actualizado por email. 
[Es un pago adicional / Es el primer pago de la reserva]`
    },
    
    'cancel_booking': {
        caso: 'Cuando cancela la reserva',
        retorna: `EXITO_CANCELACION: Reserva [ID] cancelada correctamente.

DATOS_CONFIRMADOS:
‚Ä¢ C√≥digo reserva: [ID]
‚Ä¢ Status anterior: [status]
‚Ä¢ Nuevo status: CANCELADA
‚Ä¢ Motivo: [motivo]
‚Ä¢ Fecha cancelaci√≥n: [fecha]
‚Ä¢ Espacio liberado: S√≠

[PROMOCION_DISPONIBLE: si aplica por el motivo]

INSTRUCCION: Confirma al hu√©sped que la reserva fue cancelada exitosamente. 
El espacio ya est√° liberado. [Menciona promoci√≥n si aplica]`
    },
    
    'generate_booking_confirmation_pdf': {
        caso: 'Cuando genera y env√≠a el PDF',
        retorna: `PDF_ENVIADO: Documento enviado exitosamente.

RESUMEN:
Reserva: [ID]
Cliente: [Nombre]
Fechas: [entrada] al [salida] ([N] noches)
Apartamento: [nombre]
Hu√©spedes: [adultos] adultos [+ ni√±os si hay]
Total: $[total] COP
Pagado: $[pagado] COP
Saldo: $[saldo] COP

INSTRUCCION: Dile al cliente algo as√≠:
"¬°Hola! üëã Te envi√© el PDF con los detalles. Rev√≠salo cuando puedas para verificar que todo est√© en orden. ¬øSabes aproximadamente tu hora de llegada? Si necesitas recomendaciones de actividades, tours? Estoy aqu√≠ para ayudarte."`
    },
    
    'generate_payment_receipt_pdf': {
        caso: 'Cuando genera el recibo de pago',
        retorna: `EXITO_RECIBO: Recibo de pago generado y enviado exitosamente.

DATOS_CONFIRMADOS:
‚Ä¢ Reserva: [ID]
‚Ä¢ Documento: Recibo de Pago
‚Ä¢ √öltimo pago: $[monto] COP
‚Ä¢ Total pagado: $[total] COP
‚Ä¢ Saldo pendiente: $[saldo] COP

INSTRUCCION: Confirma al hu√©sped que le enviaste el recibo de pago. 
Si hay saldo pendiente, recu√©rdale amablemente el monto. 
Si est√° todo pagado, felic√≠talo y confirma que su reserva est√° completa.`
    }
};

console.log('\n');

Object.entries(SUCCESS_MESSAGES).forEach(([func, info], index) => {
    console.log(`${index + 1}. üìÅ ${func}`);
    console.log(`   Caso: ${info.caso}`);
    console.log('   ' + '-'.repeat(60));
    console.log('   RETORNA:');
    info.retorna.split('\n').forEach(line => {
        console.log(`   ${line}`);
    });
    console.log('   ' + '-'.repeat(60));
    console.log('');
});

console.log('=' .repeat(70));
console.log('\nüéØ PUNTOS CLAVE:');
console.log('  ‚Ä¢ Cada funci√≥n da instrucciones ESPEC√çFICAS a OpenAI');
console.log('  ‚Ä¢ Algunas funciones indican SIGUIENTE_PASO (llamar otra funci√≥n)');
console.log('  ‚Ä¢ Todas incluyen INSTRUCCION sobre qu√© decirle al hu√©sped');
console.log('  ‚Ä¢ Los datos confirmados permiten a OpenAI dar detalles precisos');
console.log('  ‚Ä¢ El formato es consistente para facilitar el procesamiento');

console.log('\n‚ú® OpenAI recibe toda la informaci√≥n necesaria para continuar la conversaci√≥n!');