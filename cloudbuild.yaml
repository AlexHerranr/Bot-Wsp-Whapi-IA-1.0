steps:
  # Paso 1: Construir la imagen Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'northamerica-south1-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/bot-wsp-whapi-ia:${SHORT_SHA}'
      - '-t'
      - 'northamerica-south1-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/bot-wsp-whapi-ia:latest'
      - '.'

  # Paso 2: Subir la imagen al registro
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'northamerica-south1-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/bot-wsp-whapi-ia:${SHORT_SHA}'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'northamerica-south1-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/bot-wsp-whapi-ia:latest'

  # Paso 3: Desplegar a Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'bot-wsp-whapi-ia'
      - '--image=northamerica-south1-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/bot-wsp-whapi-ia:${SHORT_SHA}'
      - '--region=northamerica-south1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--timeout=300'
      - '--set-env-vars=NODE_ENV=production,PORT=8080,LOG_LEVEL=production'
      - '--set-secrets=OPENAI_API_KEY=openai-api-key:latest,WHAPI_TOKEN=whapi-token:latest,ASSISTANT_ID=assistant-id:latest'

# Configuración adicional
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Imágenes a almacenar
images:
  - 'northamerica-south1-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/bot-wsp-whapi-ia:${SHORT_SHA}'
  - 'northamerica-south1-docker.pkg.dev/${PROJECT_ID}/cloud-run-source-deploy/bot-wsp-whapi-ia:latest'

# Configuración de timeout
timeout: '1200s' 