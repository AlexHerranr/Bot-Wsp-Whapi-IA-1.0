// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// model User {
//   id           String   @id @default(cuid())
//   phoneNumber  String   @unique
//   
//   // Nombres (múltiples fuentes)
//   name                String?   // Nombre principal/mostrar
//   whatsappProfileName String?   // Nombre del perfil de WhatsApp (chatInfo.name)
//   extractedName       String?   // Nombre extraído de conversaciones
//   displayName         String?   // Nombre calculado para mostrar
//   
//   // Información de contacto
//   isContact           Boolean   @default(false)
//   isVip               Boolean   @default(false)
//   
//   // Timestamps
//   createdAt           DateTime  @default(now())
//   lastActivity        DateTime  @updatedAt
//   firstInteraction    DateTime?
//   
//   // CRM y seguimiento
//   customerStatus      String?   // 'nuevo', 'activo', 'inactivo', 'vip'
//   totalStays          Int       @default(0)
//   
//   threads             Thread[]
// }

// model Thread {
//   id           String    @id @default(cuid())
//   openaiId     String    @unique
//   userId       String
//   chatId       String?
//   userName     String?
//   
//   // Etiquetas y clasificación (formato WHAPI)
//   labels       Json?     // Array de etiquetas simples ["etiqueta1", "etiqueta2"]
//   whapiLabels  Json?     // Etiquetas completas de WHAPI [{id, name, color}, ...]
//   primaryLabel String?   // Etiqueta principal
//   
//   // CRM y seguimiento comercial
//   perfilStatus    String?   // Resumen del cliente (quién es, qué se ha hablado)
//   proximaAccion   String?   // Próxima acción recomendada
//   prioridad       String?   // 'ALTA', 'MEDIA', 'BAJA'
//   estadoComercial String?   // 'prospecto', 'cotizacion', 'reserva', 'huesped', 'perdido'
//   
//   // Metadata y timestamps
//   metadata        Json?
//   createdAt       DateTime  @default(now())
//   lastActivity    DateTime  @updatedAt
//   
//   // Análisis de conversación
//   totalMessages   Int       @default(0)
//   lastMessageRole String?   // 'user' o 'assistant'
//   lastMessageAt   DateTime?
//   
//   user            User      @relation(fields: [userId], references: [id])
//   messages        Message[]
// }

// model Message {
//   id        String   @id @default(cuid())
//   threadId  String
//   role      String   // 'user' o 'assistant'
//   content   String
//   
//   // Análisis del mensaje
//   messageType String?  // 'text', 'image', 'audio', 'document', 'voice'
//   sentiment   String?  // 'positive', 'negative', 'neutral'
//   intent      String?  // 'consulta', 'reserva', 'queja', 'info'
//   
//   // Metadata y timestamps
//   metadata    Json?
//   createdAt   DateTime @default(now())
//   
//   thread      Thread   @relation(fields: [threadId], references: [id])
// }

// Vista unificada - Orden visual + nombres exactos de metadatos
model ClientView {
  // 🔥 PRIORIDAD VISUAL 1: IDENTIFICACIÓN BÁSICA
  phoneNumber         String   @id  // FUENTE: webhookData.message.from (WHAPI webhook) | FRECUENCIA: En cada mensaje
  name                String?  // FUENTE: whapiLabels.getChatInfo().name | FRECUENCIA: syncWhapiLabels() - solo threads viejos
  userName            String?  // FUENTE: threads.json.userName | FRECUENCIA: Al crear thread
  
  // 🔥 PRIORIDAD VISUAL 2: CRM - LO MÁS IMPORTANTE  
  perfilStatus        String?  // FUENTE: Calculado por bot | FRECUENCIA: En cada interacción
  proximaAccion       String?  // FUENTE: Calculado por bot | FRECUENCIA: En cada interacción
  prioridad           String   @default("MEDIA")  // FUENTE: Calculado | FRECUENCIA: En cada interacción
  
  // 🔥 PRIORIDAD VISUAL 3: ETIQUETAS
  label1              String?  // FUENTE: whapiLabels.getChatInfo().labels[0].name | FRECUENCIA: syncWhapiLabels() - solo threads viejos
  label2              String?  // FUENTE: whapiLabels.getChatInfo().labels[1].name | FRECUENCIA: syncWhapiLabels() - solo threads viejos 
  label3              String?  // FUENTE: whapiLabels.getChatInfo().labels[2].name | FRECUENCIA: syncWhapiLabels() - solo threads viejos
  
  // 🔥 PRIORIDAD VISUAL 4: CONTACTO
  chatId              String?  // FUENTE: threads.json.chatId | FRECUENCIA: Al crear thread
  
  // 🔥 PRIORIDAD VISUAL 5: ACTIVIDAD RECIENTE
  lastActivity        DateTime @updatedAt // FUENTE: @updatedAt automático de Prisma | FRECUENCIA: En cada cambio del registro
  
  // 🔥 PRIORIDAD VISUAL 6: THREAD TÉCNICO
  threadId            String?  // FUENTE: threads.json.threadId (OpenAI) | FRECUENCIA: Al crear/cambiar thread
}