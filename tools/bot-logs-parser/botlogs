#!/bin/bash
# botlogs - Acceso r√°pido a logs detallados del bot
#
# MOTIVACI√ìN:
# ===========
# Google Cloud Console es excelente para muchas cosas, pero p√©simo para debugging r√°pido.
# Este script es nuestra "puerta trasera" para obtener logs REALES, COMPLETOS y √öTILES
# en segundos, no minutos.
#
# PROBLEMA PRINCIPAL QUE RESUELVE:
# ================================
# En Cloud Console: Click ‚Üí Expandir ‚Üí Leer ‚Üí Click ‚Üí Expandir ‚Üí Leer... (x100)
# Con este script: botlogs ‚Üí TODO visible instant√°neamente
#
# DISE√ëADO PARA:
# ==============
# - Desarrolladores que necesitan debuggear R√ÅPIDO
# - Soporte t√©cnico que necesita contexto COMPLETO  
# - Cualquiera que valore su tiempo y cordura
#
# EJEMPLOS DE USO REAL:
# ====================
# "El bot est√° lento hoy" ‚Üí botlogs --hours 1
# "Usuario X tiene problemas" ‚Üí botlogs user 573003913251
# "Hubo errores hace 3 horas" ‚Üí botlogs errors --hours 3
# "Necesito logs para el reporte" ‚Üí botlogs --hours 24 > reporte.txt

# Obtener la ruta del script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PYTHON_SCRIPT="$SCRIPT_DIR/parse_bot_logs.py"

# Verificar que el script Python existe
if [ ! -f "$PYTHON_SCRIPT" ]; then
    echo "‚ùå Error: No se encuentra parse_bot_logs.py en $SCRIPT_DIR"
    exit 1
fi

# Funci√≥n para mostrar ayuda
show_help() {
    echo "ü§ñ Bot Logs Parser - Herramienta de an√°lisis r√°pido"
    echo ""
    echo "Uso b√°sico:"
    echo "  botlogs                    # √∫ltimas 2 horas"
    echo "  botlogs 6                  # √∫ltimas 6 horas"
    echo "  botlogs errors             # solo errores"
    echo "  botlogs user 573003913251  # logs de usuario espec√≠fico"
    echo ""
    echo "Opciones avanzadas:"
    echo "  botlogs --hours 12 --errors-only"
    echo "  botlogs --user 573003913251 --hours 4"
    echo "  botlogs --session session-123456"
    echo ""
    echo "Flags especiales:"
    echo "  --no-copy     No copiar al portapapeles"
    echo "  --no-save     No guardar en archivo"
    echo "  --help        Mostrar esta ayuda"
    echo ""
    echo "üí° Tip: Todos los logs se copian autom√°ticamente al portapapeles"
}

# Procesar argumentos simples
case "$1" in
    "help"|"--help"|"-h")
        show_help
        exit 0
        ;;
    "errors")
        shift
        python3 "$PYTHON_SCRIPT" --errors-only "$@"
        ;;
    "user")
        if [ -z "$2" ]; then
            echo "‚ùå Error: Especifica el ID de usuario"
            echo "Ejemplo: botlogs user 573003913251"
            exit 1
        fi
        user_id="$2"
        shift 2
        python3 "$PYTHON_SCRIPT" --user "$user_id" "$@"
        ;;
    [0-9]*)
        # Si el primer argumento es un n√∫mero, asumir que son horas
        hours="$1"
        shift
        python3 "$PYTHON_SCRIPT" --hours "$hours" "$@"
        ;;
    *)
        # Pasar todos los argumentos al script Python
        python3 "$PYTHON_SCRIPT" "$@"
        ;;
esac 