{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(mkdir:*)",
      "Bash(node:*)",
      "Bash(cd \"C:\\Users\\alex-\\Bot-Wsp-Whapi-IA\")",
      "Bash(git add src/utils/logger.ts README_LOGS.md)",
      "Bash(git commit -m \"feat: implementar logging diferenciado por entorno + documentaci√≥n\n\nCAMBIOS PRINCIPALES:\n‚úÖ LOCAL: Tiempo real (100ms timer + 50 logs buffer) - como antes\n‚úÖ RAILWAY: Eficiente (solo cada 400 logs, sin timer) - optimizado\n‚úÖ Detecci√≥n autom√°tica de entorno\n‚úÖ Buffer diferenciado seg√∫n plataforma\n\nSISTEMAS DE LOGGING:\nüì± Terminal Local Limpios - desarrollo b√°sico\nüìÅ Local T√©cnicos - tiempo real con archivos \n‚òÅÔ∏è Railway T√©cnicos - optimizado para producci√≥n\n\nDOCUMENTACI√ìN:\nüìã README_LOGS.md - gu√≠a completa de los 3 sistemas\nüîç Comparaci√≥n detallada de caracter√≠sticas\n‚öôÔ∏è Comandos √∫tiles para debugging\n\nRESULTADO:\n- Local mantiene experiencia de desarrollo fluida\n- Railway optimizado para menor I/O y mejor performance\n- Documentaci√≥n completa para el equipo\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(npx tsc:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(echo $HOME)",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run dev:*)",
      "Bash(npm run check:*)",
      "Bash(npm run:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(grep:*)",
      "Bash(mv:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(move:*)",
      "Bash(taskkill:*)",
      "Bash(rm:*)",
      "Bash(del \"C:\\Users\\alex-\\Bot-Wsp-Whapi-IA\\test-typing-indicator.js\")",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(railway:*)",
      "Bash(npm install:*)",
      "Bash(cp:*)",
      "Bash(claude config set --global model claude-4-0-opus)",
      "Bash(git checkout:*)",
      "Bash(powershell:*)",
      "Bash(touch:*)",
      "Bash(git update-index:*)",
      "Bash(npx prisma init:*)",
      "Bash(npx.cmd prisma:*)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma:*)",
      "Bash(curl:*)",
      "Bash(timeout:*)",
      "Bash(start /B node:*)",
      "Bash(del smoke-test.js)",
      "Bash(psql:*)",
      "Bash(where psql)",
      "Bash(choco:*)",
      "Bash(winget:*)",
      "Bash(refreshenv)",
      "Bash(dir:*)",
      "Bash(npx ts-node:*)",
      "Bash(export:*)",
      "Bash(pg_ctl:*)",
      "Bash(initdb:*)",
      "Bash(cmd.exe:*)",
      "WebFetch(domain:docs.railway.app)",
      "WebFetch(domain:docs.railway.com)",
      "Bash(sqlite3:*)",
      "Bash(bash:*)",
      "Bash(rg:*)",
      "Bash(.scriptsaudit-migration.sh:*)",
      "mcp__ide__executeCode",
      "Bash(python:*)",
      "Bash(true)",
      "Bash(createdb:*)",
      "Bash(npx jest:*)",
      "Bash(set WHAPI_TOKEN=hXoVA1qcPcFPQ0uh8AZckGzbPxquj7dZ)",
      "Bash(set WHAPI_API_URL=https://gate.whapi.cloud)",
      "Bash(npm start)",
      "Bash(set PORT=3010)",
      "Bash(start http://localhost:5555)",
      "Bash(wmic process where:*)",
      "Bash(npx kill-port:*)",
      "Bash(echo:*)",
      "Bash(echo \"CRM_MODE: $env:CRM_MODE\")",
      "Bash(sed:*)",
      "Bash(cat:*)",
      "Bash(pkill:*)",
      "Bash(npx tsx:*)",
      "Bash(del test-compact-logging.js)",
      "Bash(del debug-chunks.js)",
      "Bash(del nul)",
      "Bash(tree:*)",
      "Bash(del \"C:\\Users\\alex-\\Bot-Wsp-Whapi-IA\\src\\utils\\messageBuffering.ts\")",
      "Bash(set PORT=3011)",
      "WebFetch(domain:platform.openai.com)",
      "WebFetch(domain:community.openai.com)",
      "Bash(del test-token-accumulation.js)",
      "Bash(del test-db-updates.js)",
      "Bash(del \"C:\\Users\\alex-\\Bot-Wsp-Whapi-IA\\src\\functions\\registry\\temp-function-registry.ts\")",
      "Bash(del test-function-registry.js)",
      "Bash(git stash:*)",
      "Bash(del test-simple.js)",
      "Bash(del test-integration-simple.js)",
      "Bash(del test-check-availability.js)",
      "Bash(set)",
      "Bash(del test-no-capacity.js)",
      "Bash(del test-availability.js)",
      "Bash(del test-availability.ts)",
      "Bash(del test-availability-direct.ts)",
      "Bash(del check-db-data.ts)",
      "Bash(del fix-studio-price.ts)",
      "Bash(del \"C:\\Users\\alex-\\Bot-Wsp-Whapi-IA\\test-offers-endpoint.js\")",
      "Bash(git rm:*)",
      "Bash(del test-railway-logs.js)",
      "Bash(del:*)",
      "Bash(RAILWAY_COMPACT_LOGS=true node test-logging-sources.js)"
    ],
    "deny": []
  }
}