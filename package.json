{
  "name": "tealquilamos-bot",
  "version": "1.0.0",
  "description": "Bot de WhatsApp para hotel TeAlquilamos con IA integrada",
  "type": "commonjs",
  "main": "src/main.ts",
  "scripts": {
    "dev": "tsx --watch src/main.ts",
    "dev:railway": "cross-env NODE_ENV=development PORT=3010 RAILWAY_PROJECT_ID=local-dev RAILWAY_ENVIRONMENT_NAME=development tsx --watch src/main.ts",
    "postinstall": "node -e \"console.log('POST-INSTALL: Verificando Chromium...'); try { const chromium = require('@sparticuz/chromium'); console.log('Chromium path check:', chromium.executablePath); } catch(e) { console.log('Chromium check failed:', e.message); }\"",
    "dev:local": "concurrently -k -n BOT,NGROK -c green,cyan \"cross-env PORT=3010 npm run dev\" \"ngrok http 3010 --domain=actual-bobcat-handy.ngrok-free.app\"",
    "dev:local:railway": "concurrently -k -n BOT,NGROK -c green,cyan \"npm run dev:railway\" \"ngrok http 3010 --domain=actual-bobcat-handy.ngrok-free.app\"",
    "dev:local:clean": "powershell -ExecutionPolicy Bypass -File scripts/windows/start-dev-local.ps1",
    "dev:local:fix": "powershell -ExecutionPolicy Bypass -File scripts/windows/ngrok-manager.ps1",
    "dev:local:alt": "concurrently -k -n BOT,TUNNEL -c green,cyan \"npm run dev\" \"lt --port 3010 --subdomain tealquilamos-bot\"",
    "dev:cloud": "cross-env NODE_ENV=production tsx --watch src/main.ts",
    "dev:old": "tsx --watch src/app.ts",
    "build": "tsc --outDir dist && npm run build:copy-assets",
    "build:copy-assets": "node scripts/copy-assets.js",
    "start": "node dist/main.js",
    "db:setup": "npx prisma db push",
    "db:migrate": "npx prisma migrate dev",
    "db:studio": "npx prisma studio",
    "db:seed": "npx tsx prisma/seed.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest tests/unit/",
    "test:crm": "node scripts/run-crm-tests.js",
    "test:crm:coverage": "jest --testPathPatterns=crm --coverage --coverageDirectory=tests/reports/coverage-crm",
    "test:crm:watch": "jest --testPathPatterns=crm --watch",
    "update-crm-real": "node scripts/update-crm-real.js",
    "test-whapi": "node scripts/test-whapi-access.js",
    "update-assistant-prompt": "node scripts/update-assistant-prompt.js",
    "execute-daily-actions": "npm run build && node scripts/execute-daily-actions.js",
    "execute-daily-actions-simple": "node scripts/execute-daily-actions-simple.js",
    "test-complete-crm-flow": "node scripts/test-complete-crm-flow.js",
    "test:crm-flow": "jest tests/integration/crm-complete-flow.test.ts --testTimeout=60000",
    "test:env": "node scripts/development/test-env.js",
    "verify": "node scripts/verify-environment.js",
    "assistant": "node scripts/assistant-management/assistant-cli.js",
    "create-assistant": "node scripts/create-new-assistant-v2.js",
    "check-docs": "node scripts/check-docs.js",
    "pre-deploy": "node scripts/testing/pre-deploy-test.js",
    "pre-deploy:powershell": "powershell -ExecutionPolicy Bypass -File scripts/pre-deploy.ps1",
    "deploy": "npm run build && npm run pre-deploy && git push origin master",
    "deploy:safe": "npm run pre-deploy && npm run build && git push origin master",
    "deploy:cloud": "npm run build && gcloud run deploy bot-wsp-whapi-ia --source . --region northamerica-northeast1 --allow-unauthenticated",
    "deploy:auto": "npm run deploy:cloud",
    "health-check": "node -e \"require('http').get('http://localhost:8080/health', (res) => { console.log('Status:', res.statusCode); process.exit(res.statusCode === 200 ? 0 : 1) })\"",
    "health-check:local": "node -e \"require('http').get('http://localhost:3010/health', (res) => { console.log('Status:', res.statusCode); process.exit(res.statusCode === 200 ? 0 : 1) })\"",
    "config": "node -e \"console.log('Environment Config:'); console.log(require('./src/config/environment.js').config);\"",
    "cloud:logs": "python tools/log-tools/cloud-parser/parse_bot_logs.py --sessions 10 --hours 1",
    "logs:railway": "railway logs --deployment",
    "logs:get": "scripts/windows/get-logs.bat",
    "logs:download": "node scripts/logs/download-railway-logs.js download",
    "logs:download:1h": "node scripts/logs/download-railway-logs.js download 1h",
    "logs:download:6h": "node scripts/logs/download-railway-logs.js download 6h",
    "logs:download:24h": "node scripts/logs/download-railway-logs.js download 24h",
    "logs:stats": "node scripts/logs/download-railway-logs.js stats",
    "logs:railway:save": "railway logs --deployment > logs/railway/railway-logs-$(date +%Y-%m-%d_%H-%M-%S).txt",
    "logs:railway:live": "railway logs --deployment --follow",
    "logs:railway:json": "railway logs --deployment --json > logs/railway/railway-logs-json-$(date +%Y-%m-%d_%H-%M-%S).json",
    "predeploy-checklist": "node scripts/predeploy-checklist.js",
    "build:check": "node scripts/verify-build.js",
    "test:functions": "node scripts/test/test-function-registry.js",
    "test:imports": "node scripts/test/test-imports.js",
    "clean": "rm -rf dist tmp/audio/*.ogg logs/*.log",
    "lint": "eslint src --ext .ts,.js --fix || true",
    "check:types": "tsc --noEmit",
    "check:deps": "npx depcheck",
    "audit:security": "npm audit --production",
    "check:voice": "node scripts/check-voice-config.js",
    "test:dashboard": "node test-dashboard.js",
    "pre-deploy:check": "npm run build:check && npm run test:functions && npm run build",
    "pre-deploy:full": "npm run predeploy-checklist && npm run pre-deploy:check"
  },
  "keywords": [
    "whatsapp",
    "bot",
    "openai",
    "assistant",
    "hotel",
    "typescript"
  ],
  "dependencies": {
    "@google-cloud/secret-manager": "^6.1.0",
    "@google/generative-ai": "^0.21.0",
    "@prisma/client": "^6.15.0",
    "@sparticuz/chromium": "^138.0.2",
    "@types/handlebars": "^4.0.40",
    "@types/qrcode": "^1.5.5",
    "axios": "^1.11.0",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fast-levenshtein": "^3.0.0",
    "handlebars": "^4.7.8",
    "lru-cache": "^11.1.0",
    "node-cron": "^4.2.1",
    "node-fetch": "^2.7.0",
    "openai": "^4.76.0",
    "pdf-lib": "^1.17.1",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "puppeteer": "^24.17.1",
    "puppeteer-core": "^24.17.1",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.2.2",
    "tslib": "^2.8.1",
    "tsyringe": "^4.10.0",
    "xlsx": "^0.18.5",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^28.0.1",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^15.3.0",
    "@rollup/plugin-typescript": "^12.1.1",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/lru-cache": "^7.10.9",
    "@types/node": "^22.17.0",
    "@types/puppeteer": "^5.4.7",
    "@types/supertest": "^6.0.3",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "jest": "^30.0.5",
    "prisma": "^6.15.0",
    "rollup": "^4.27.4",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.0",
    "tsx": "^4.19.2",
    "typescript": "^5.9.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "author": "Alexander - TeAlquilamos",
  "license": "ISC"
}
